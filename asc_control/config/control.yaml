asc:
 asc_state_controller:
   type: "joint_state_controller/JointStateController"
   publish_rate: 50

 asc_base_controller:
   type: "diff_drive_controller/DiffDriveController"
   left_wheel: "left_rear_wheel_joint"
   right_wheel: "right_rear_wheel_joint"
   publish_rate: 50
   pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
   twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
   cmd_vel_timeout: 0.25
   velocity_rolling_window_size: 2
 
   # Base frame_id
   base_frame_id: base_link

   # Odometry fused with IMU is published by robot_localization, so
   # no need to publish a TF based on encoders alone.
   enable_odom_tf: false

   # Husky hardware provides wheel velocities
   estimate_velocity_from_position: false

   # Wheel separation and radius multipliers
   wheel_separation_multiplier: 1.875 # default: 1.0
   wheel_radius_multiplier    : 1.0 # default: 1.0

   # Velocity and acceleration limits
   # Whenever a min_* is unspecified, default to -max_*
   linear:
     x:
       has_velocity_limits    : true
       max_velocity           : 1.0   # m/s
       has_acceleration_limits: true
       max_acceleration       : 3.0   # m/s^2
   angular:
     z:
       has_velocity_limits    : true
       max_velocity           : 2.0   # rad/s
       has_acceleration_limits: true
       max_acceleration       : 6.0   # rad/s^2

 asc_ackermann_controller:
  type: "ackermann_steering_controller/AckermannSteeringController"
  rear_wheel  : 'rear_wheel_joint'
  front_steer : 'front_steer_joint'
  publish_rate: 50.0 # defaults to 50

  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  cmd_vel_timeout: 20.0 # we test this separately, give plenty for the other tests

  #wheel_separation_h : 0.4
  #wheel_radius : 0.11
  wheel_separation_h_multiplier: 0.257 # calibration parameter for odometory, needed for test.


#rear_wheels: ['rear_right_wheel_joint', 'rear_left_wheel_joint']

